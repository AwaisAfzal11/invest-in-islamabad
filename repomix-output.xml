This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.github/instructions.txt
.github/workflows/deploy.yml
.gitignore
package.json
public/index.html
src/App.js
src/Components/Footer/Footer.jsx
src/Components/Form/Form23then135.jsx
src/Components/Navbar/Desktop.jsx
src/Components/Navbar/Mobile.jsx
src/Components/Navbar/Navbar.css
src/Components/Navbar/Navbar.jsx
src/Components/Navbar/WhatsApp.jsx
src/Data/Navbar.js
src/index.css
src/index.js
src/Pages/About/About.jsx
src/Pages/Contact/Contact.jsx
src/Pages/Home/Benefits.jsx
src/Pages/Home/ExitStrategy.jsx
src/Pages/Home/Hero.jsx
src/Pages/Home/Home.jsx
src/Pages/Home/Issues.jsx
src/Pages/Home/Methods.jsx
src/Pages/Home/Risks.jsx
tailwind.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".github/instructions.txt">
Create FTP account. Hostinger-Files-CreateFTP
Add .github folder 
Create build and push
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
</file>

<file path="src/Components/Form/Form23then135.jsx">
import React, { useState } from "react";
import { Send, ArrowRight, ArrowDown } from "lucide-react";

const Form = () => {
  const [formData, setFormData] = useState({
    firstName: "",
    email: "",
    phone: "",
  });

  const [status, setStatus] = useState({ 
    submitting: false, 
    msg: '',
    type: '' 
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Reset previous status
    setStatus({ 
      submitting: true, 
      msg: 'Sending...', 
      type: '' 
    });

    try {
      const formDataToSend = new FormData();
      Object.keys(formData).forEach(key => {
        // Only append non-empty values
        if (formData[key]) {
          formDataToSend.append(key, formData[key]);
        }
      });

      const response = await fetch("/send_email_global.php", {
        method: 'POST',
        body: formDataToSend
      });

      if (!response.ok) {
        throw new Error("Submission failed");
      }

      const result = await response.json();

      // Update status based on server response
      setStatus({
        submitting: false,
        msg: result.message || "Message sent successfully!",
        type: result.status
      });

      // Clear form if submission was successful
      if (result.status === 'success') {
        setFormData({
          firstName: "",
          email: "",
          phone: "",
        });
      }
    } catch (error) {
      setStatus({ 
        submitting: false, 
        msg: "Failed to send request. Please try again.", 
        type: 'error' 
      });
    }
  };

  return (
    <div className="container mx-auto p-4 my-20">
      <div className="max-w-3xl mx-auto flex flex-col lg:flex-row gap-6 items-stretch">
        {/* Contact Us Box */}
        <div className="bg-gradient-to-r from-[#3D498A] to-[#6A7D9F] rounded-2xl p-8 flex items-center justify-center lg:w-1/2">
          <div className="flex items-center gap-4">
            <h2 className="text-3xl font-bold text-white">Contact Us</h2>
            {/* Show different arrows based on screen size */}
            <ArrowRight className="hidden lg:block w-8 h-8 text-white" />
            <ArrowDown className="lg:hidden w-8 h-8 text-white" />
          </div>
        </div>

        {/* Form Box */}
        <div className="bg-white rounded-2xl shadow-lg p-6 lg:p-8 lg:w-1/2">
          {/* Status Message */}
          {status.msg && (
            <div className={`mb-4 p-3 rounded text-center ${
              status.type === 'success' 
                ? 'bg-green-100 text-green-800' 
                : 'bg-red-100 text-red-800'
            }`}>
              {status.msg}
            </div>
          )}

          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label
                htmlFor="firstName"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Full Name
              </label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                value={formData.firstName}
                onChange={handleChange}
                className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 outline-none"
                placeholder="Your Good Name"
                required
              />
            </div>

            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Email Address
              </label>
              <input
                type="email"
                id="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 outline-none"
                placeholder="email@example.com"
                required
              />
            </div>

            <div>
              <label
                htmlFor="phone"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                Phone Number
              </label>
              <input
                type="tel"
                id="phone"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                className="w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200 outline-none"
                placeholder="+1 (123) 456-7890"
                required
              />
            </div>

            <button
              type="submit"
              disabled={status.submitting}
              className="w-full bg-[#3D498A] text-white py-3 px-6 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-200 flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {status.submitting ? 'Submitting...' : 'Submit'} <Send className="h-4 w-4" />
            </button>
          </form>
        </div>
      </div>
    </div>
  );
};

export default Form;
</file>

<file path="src/Components/Navbar/Navbar.css">
.dropown_menu {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 0.8s ease, transform 0.8s ease;
  pointer-events: none;
  visibility: hidden;
}

.dropown_menu_trigger:hover .dropown_menu,
.dropown_menu:hover {
  opacity: 1;
  transform: translateY(0px);
  visibility: visible;
  pointer-events: auto;
}


.navbar-menu {
  top: 0;
  right: -100%;
  width: 18rem;
  min-height: 100vh;
  background-color: #050505;
  color: #6C6C6C;
  overflow-y: auto;
  transition: right 0.3s ease, opacity 0.3s ease;
  opacity: 0;
  z-index: 10000;
  visibility: hidden;
  position: fixed;
}

.navbar-menu.open {
  right: 0;
  opacity: 1;
  visibility: visible;
}

/* Submenu styles */
.submenu {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.submenu.open {
  opacity: 1;
  transform: translateY(0);
}
</file>

<file path="src/index.js">
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { BrowserRouter } from "react-router-dom";
import { HelmetProvider } from "react-helmet-async";

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <HelmetProvider>
    <BrowserRouter>
        <App />
    </BrowserRouter>
    </HelmetProvider>
  </React.StrictMode>
);
</file>

<file path="src/Pages/About/About.jsx">
import React from 'react'


function About() {
  return (
    <div className='overflow-hidden'>
       About
    </div>
  )
}

export default About
</file>

<file path="src/Pages/Contact/Contact.jsx">
import React from 'react';

function Contact() {
  return (
    <div className='overflow-hidden'>
   Contact
    </div>
  )
}

export default Contact
</file>

<file path="src/Components/Footer/Footer.jsx">
import React from 'react';
import { MapPin, Phone, Mail, GlobeIcon } from 'lucide-react';
import { FaFacebook, FaTiktok, FaLinkedin, FaInstagram } from "react-icons/fa";
import { Link } from 'react-router-dom';

const Footer = () => {
  const services = [
    { name: 'Mainland Company Formation', path: '/mainland' },
    { name: 'Free Zone Company Formation', path: '/freezone' },
    { name: 'Offshore Company Formation', path: '/offshore' },
    { name: 'PRO Services', path: '/pro-services' },
    { name: 'Corporate Bank Account Opening', path: '/corporate-bank-account-opening' },
    { name: 'Accounting & Bookkeeping', path: '/accounting-bookkeeping' },
    { name: 'Other Services', path: '/other-services' },
  ];

  const menuItems = [
    { name: 'Home', path: '/' },
    { name: 'Blogs', path: '/blogs' },
    { name: 'About Us', path: '/about' },
    { name: 'Contact Us', path: '/contact' },
    { name: 'Testimonials', path: '/testimonials' },
    { name: 'Golden Visa', path: '/goldenVisa' },
  ];

  return (
    <footer className="bg-[#3D498A] text-white pt-12 pb-6 container mx-auto">
      <div className="px-7 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-20">
        <div className="space-y-6 sm:max-w-7 md:max-w-[230px]">
          <img
            src='https://rightone.ae/Assets/Logo/blueLogo.png'
            alt="Consultancy"
            className=" rounded-[10px]"
          />
          <p className="text-white text-[16px] text-justify">
            We have capabilities and experience to deliver the answers you need to move forward.
          </p>
          <div className="">
            <a href="https://wa.me/+971526919516" target="_blank" rel="noopener noreferrer">
              <button className="bg-white text-[#3D498A] text-[16px] w-[100%] py-2 rounded-md">
                Free Consultation
              </button>
            </a>
          </div>
        </div>
        <div className="space-y-6">
          <h3 className="text-lg font-bold">CONTACT INFO</h3>
          <div className="space-y-4 text-white">
            <p className="flex items-start">
              <MapPin className="mr-2 h-5 w-5 mt-1 flex-shrink-0" />
              Right One Corporate Services LLC - Ground Floor , Office # 55 , Al Gurg Building , Umm Hurair Rd , Dubai - U.A.E
            </p>
            <p className="flex items-center">
              <Mail className="mr-2 h-5 w-5" />
              info@rightone.ae
            </p>
            <p className="flex items-center">
              <GlobeIcon className="mr-2 h-5 w-5" />
              www.rightone.ae
            </p>
            <p className="flex flex-col items-start">
              <span className="flex items-center">
                <Phone className="mr-2 h-5 w-5" />
                Landline: +971 42 224 797
              </span>
            </p>
            <p className="flex flex-col items-start">
              <span className="flex items-center">
                <Phone className="mr-2 h-5 w-5" />
                Mobile: +971 50 983 3635
              </span>
            </p>
          </div>
          <div className="flex space-x-4">
            <a
              href="https://www.facebook.com/rightonecorporateservices"
              target="_blank"
              rel="noopener noreferrer"
              className="text-2xl hover:text-blue-500 transition-colors"
            >
              <FaFacebook />
            </a>
            <a
              href="https://www.tiktok.com/@rightonecorporate"
              target="_blank"
              rel="noopener noreferrer"
              className="text-2xl hover:text-blue-400 transition-colors"
            >
              <FaTiktok />
            </a>
            <a
              href="https://ae.linkedin.com/company/right-one-corporate-services"
              target="_blank"
              rel="noopener noreferrer"
              className="text-2xl hover:text-blue-600 transition-colors"
            >
              <FaLinkedin />
            </a>
            <a
              href="https://www.instagram.com/rightonecorporateservices/"
              target="_blank"
              rel="noopener noreferrer"
              className="text-2xl hover:text-pink-500 transition-colors"
            >
              <FaInstagram />
            </a>
          </div>
        </div>
        <div>
          <h3 className="text-lg font-bold mb-6">CORPORATE SERVICES</h3>
          <ul className="space-y-3">
            {services.map((service, index) => (
              <li key={index}>
                <Link
                  to={service.path}
                  className="text-white hover:text-white transition-colors"
                >
                  {service.name}
                </Link>
              </li>
            ))}
          </ul>
        </div>
        <div>
          <h3 className="text-lg font-bold mb-6">Quick Links</h3>
          <ul className="space-y-3">
            {menuItems.map((item, index) => (
              <li key={index}>
                <Link
                  to={item.path}
                  className="text-white hover:text-white transition-colors"
                >
                  {item.name}
                </Link>
              </li>
            ))}
          </ul>
        </div>
      </div>
      <div className="mx-auto px-4 mt-12 pt-6 border-t max-w-custom">
        <div className="flex flex-col sm:flex-row justify-between items-center text-white mx-8 space-y-4 sm:space-y-0">
          <div className="text-center sm:text-left">
            <span>© 2024 RIGHT ONE CORPORATE SERVICES. ALL RIGHTS RESERVED</span>
          </div>
          <div className="space-x-4 text-center sm:text-right">
            <Link to="/" className="hover:text-white transition-colors">
              Home
            </Link>
            <span>|</span>
            <Link to="/contact" className="hover:text-white transition-colors">
              Contact Us
            </Link>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
</file>

<file path="src/Components/Navbar/Navbar.jsx">
import './Navbar.css'
import React from 'react'
import Mobile from './Mobile'
import Desktop from './Desktop'
import WhatsApp from './WhatsApp'

function Navbar() {
  return (
    <>
      <Mobile />
      <Desktop />
      <WhatsApp />
    </>
  )
}

export default Navbar
</file>

<file path="src/Components/Navbar/WhatsApp.jsx">
import React from 'react';
import '@fortawesome/fontawesome-free/css/all.css';

export default function WhatsApp() {
  return (
    <a
      href="https://wa.me/+923001311111"
      target="_blank"
      rel="noopener noreferrer"
      style={{
        position: 'fixed',
        bottom: '20px',
        left: '20px',
        backgroundColor: '#25D366',
        color: '#fff',
        borderRadius: '50%',
        width: '50px',
        height: '50px',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
        zIndex: 1000,
        textDecoration: 'none',
      }}
    >
      <i className="fab fa-whatsapp" style={{ fontSize: '24px' }}></i>
    </a>
  );
}
</file>

<file path="src/index.css">
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
  
}
@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@200..1000&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
html,
body {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", system-ui;
}

h1, h2, h3, h4, h5, h6,
p, ul, ol, li, blockquote,
pre, hr, address, fieldset, legend,
table, caption, th, td,
form, input, button, textarea, select, label {
  margin: 0;
  padding: 0;
}


img, a {
  padding: 0;
  margin: 0;
  outline: none;
  text-decoration: none;
}
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: #f5f5f5; 
}

::-webkit-scrollbar-thumb {
  background: #BD872E; 
  border-radius: 8px;
}

::-webkit-scrollbar-thumb:hover {
  background: #BD872E;
}

/* external imports */
.poppins {
  font-family: "Poppins", sans-serif;
}
.cairo{
  font-family: "Cairo", sans-serif;
}


/* custom css */

.sectionlayout{
  max-width: 1640px;
  margin: auto;
  padding: 0 2rem;
}
@media (max-width: 1023px) {
  .sectionlayout{
    padding: 0 1rem;
  }
  
}
@media (max-width: 767px) {
  .sectionlayout{
    padding: 0 1rem;
  }
  
}
</file>

<file path="src/Pages/Home/Benefits.jsx">
import React from 'react';
import { CheckCircle2 } from 'lucide-react';
import img1 from '../../Assets/img2.jpg'; // Your background image

const benefits = [
  "Strategic Location",
  "Verified Ownership",
  "Guaranteed Buy-Back Option",
  "Zero Service Fees",
  "Minimum Investment",
  "Easy Entry - Just 1 Kanal",
  "Perfect for Everyone"
];

const Benefits = () => {
  return (
    // 1. Container with background image
    <div 
      className="relative py-24 bg-cover bg-center bg-fixed" // Added bg-fixed for a parallax effect
      style={{ backgroundImage: `url(${img1})` }}
    >
      {/* 2. A more dynamic gradient overlay for better contrast and visual appeal */}
      <div className="absolute inset-0 bg-gradient-to-t from-black via-[#BD872E]/80 to-black/50"></div>

      {/* 3. Content container is relative to sit on top */}
      <div className="relative container mx-auto px-6 z-10">
        <div className="text-center mb-16">
          {/* 4. Enhanced typography for the main heading and subheading */}
          <h2 className="text-4xl md:text-5xl font-extrabold text-white drop-shadow-lg">
            Member Benefits
          </h2>
          <p className="text-lg text-gray-200 mt-4 max-w-3xl mx-auto">
            Unlock exclusive advantages with Goldmark Land Ventures.
          </p>
        </div>
        
        {/* 5. Grid for the benefit cards */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
          {benefits.map((benefit, index) => (
            // 6. Redesigned "glassmorphism" card with improved styling and hover effects
            <div 
              key={index} 
              className="bg-black/30 backdrop-blur-lg p-6 rounded-xl border border-white/20 shadow-xl group transform hover:-translate-y-2 transition-all duration-300 ease-in-out hover:shadow-2xl hover:border-white/40"
            >
              <div className="flex items-center space-x-4">
                {/* 7. Icon is now inside a colored circle for emphasis */}
                <div className="flex-shrink-0 w-12 h-12 bg-[#BD872E] rounded-full flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300">
                  <CheckCircle2 className="h-7 w-7 text-white" />
                </div>
                <div>
                  {/* 8. Updated text style for clarity */}
                  <h3 className="text-xl font-bold text-white">{benefit}</h3>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default Benefits;
</file>

<file path="src/Pages/Home/ExitStrategy.jsx">
import React from 'react';
import { Briefcase, TrendingUp, Repeat, UserCheck } from 'lucide-react';

const strategies = [
    { icon: <Briefcase size={40}/>, title: 'Buyback Payment', description: 'The company can repurchase the property after two years.' },
    { icon: <UserCheck size={40}/>, title: 'Upcoming Participation', description: 'Opportunity to join future housing projects.' },
    { icon: <TrendingUp size={40}/>, title: 'High Returns', description: 'Potential for profit through bulk land sales.' },
    { icon: <Repeat size={40}/>, title: 'Transferring', description: 'The certificate of ownership can be transferred.' },
];

const ExitStrategy = () => {
    return (
        <div className="py-20 bg-white">
            <div className="container mx-auto px-6">
                <h2 className="text-3xl font-bold text-center text-black mb-12">Your Exit Strategy</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                    {strategies.map((strategy, index) => (
                        <div key={index} className="text-center p-6 bg-gray-50 rounded-lg shadow-md hover:bg-[#BD872E] hover:text-white transition-all duration-300 group">
                            <div className="text-[#BD872E] group-hover:text-white inline-block mb-4">
                                {strategy.icon}
                            </div>
                            <h3 className="text-xl font-semibold mb-2">{strategy.title}</h3>
                            <p className="text-gray-600 group-hover:text-gray-200">{strategy.description}</p>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
};

export default ExitStrategy;
</file>

<file path="src/Pages/Home/Hero.jsx">
import React from 'react';
import hero from '../../Assets/hero.png'; // Assuming you have a hero image here

const Hero = () => {
  return (
    <div
      className="relative h-screen bg-cover bg-center"
      style={{ backgroundImage: `url(${hero})` }}
    >
      <div className="absolute inset-0 bg-black opacity-60"></div>
      <div className="relative z-10 flex flex-col items-center justify-center h-full text-center text-white px-4">
        <h1 className="text-4xl md:text-6xl font-extrabold leading-tight mb-4 animate-fade-in-down">
          Goldmark Land Ventures
        </h1>
        <p className="text-lg md:text-2xl font-light animate-fade-in-up">
          Transform Your Property Buying Game Plan
        </p>
      </div>
    </div>
  );
}

export default Hero;
</file>

<file path="src/Pages/Home/Issues.jsx">
import React from 'react';
import { AlertCircle } from 'lucide-react';

const issues = [
  "Delay in property possession",
  "Discrepancies in land measurements",
  "Uncertain ownership rights",
  "Incomplete fixture or missing amenities"
];

const Issues = () => {
  return (
    // 1. Switched to a clean white background for high contrast and a professional feel
    <div className="py-24 bg-white">
      <div className="container mx-auto px-6 text-center">
        
        {/* 2. Enhanced Typography to match the 'Benefits' section for consistency */}
        <h2 className="text-4xl md:text-5xl font-extrabold text-black">
          Facing Property Investment Hurdles<span className="text-[#BD872E]">.</span>
        </h2>
        <p className="text-lg text-gray-700 mt-4 max-w-3xl mx-auto mb-16">
          Tired of the common issues that plague property investors? We address them head-on.
        </p>

        {/* 3. Grid for the redesigned issue cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {issues.map((issue, index) => (
            
            // 4. Redesigned Issue Cards with better visual hierarchy and branding
            <div 
              key={index} 
              className="bg-white p-8 rounded-xl border-t-4 border-[#BD872E] shadow-lg transform hover:-translate-y-2 transition-all duration-300 hover:shadow-2xl"
            >
              {/* 5. Icon is now presented in a styled container for emphasis */}
              <div className="mx-auto mb-6 w-16 h-16 bg-amber-100 rounded-full flex items-center justify-center">
                <AlertCircle className="h-8 w-8 text-[#BD872E]" />
              </div>
              
              {/* 6. Larger, more readable font for the issue text */}
              <h3 className="text-xl font-semibold text-black">{issue}</h3>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default Issues;
</file>

<file path="src/Pages/Home/Methods.jsx">
import React from 'react';

const investmentMethods = [
  {
    title: "Method 01 (Intaqal)",
    description: "Direct transfer of ownership to the investor's name.",
  },
  {
    title: "Method 02 (Post-Dated Cheques)",
    description: "Involves a buy-back agreement with the company.",
  },
  {
    title: "Method 03 (Certificate)",
    description: "The company issues a certificate of ownership equal to the land's purchase value.",
  },
];

const Methods = () => {
  return (
    <div className="py-20 bg-gray-100">
      <div className="container mx-auto px-6">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-black">The Way to Join Us</h2>
          <p className="text-gray-600 mt-2">Choose the investment method that suits you best.</p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
          {investmentMethods.map((method, index) => (
            <div key={index} className="bg-white p-8 rounded-lg shadow-lg border-t-4 border-[#BD872E]">
              <h3 className="text-2xl font-bold text-[#BD872E] mb-4">{method.title}</h3>
              <p className="text-gray-600">{method.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default Methods;
</file>

<file path="src/Pages/Home/Risks.jsx">
import React from 'react';
import { ShieldAlert } from 'lucide-react';

const risks = [
  "Unverified and disputed properties",
  "No management support post-purchase",
  "Discrepancies in land measurements"
];

const Risks = () => {
  return (
    <div className="bg-gray-100 py-20">
      <div className="container mx-auto px-6">
        <div className="text-center mb-12">
          <h2 className="text-3xl font-bold text-black">Risks of Investing Without Expertise</h2>
          <p className="text-black mt-2">Navigating the raw land market alone can be perilous. Here's why.</p>
        </div>
        <div className="flex flex-wrap justify-center gap-8">
          {risks.map((risk, index) => (
            <div key={index} className="bg-white rounded-lg shadow-md p-6 flex items-center gap-4 max-w-sm w-full">
              <ShieldAlert className="h-10 w-10 text-[#BD872E] flex-shrink-0" />
              <p className="text-black font-medium">{risk}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default Risks;
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: '#BD872E',
      }
    },
  },
  plugins: [],
}
</file>

<file path=".github/workflows/deploy.yml">
name: 🚀 Deploy Website to Hostinger
on:
  push:
    branches:
      - main
jobs:
  FTP-Deploy-Job:
    name: 🎉 Deploy
    runs-on: ubuntu-latest
    steps:
    - name: 🚚 Get latest code
      uses: actions/checkout@v4

    # --- Add your build step here if needed ---
    # - name: 🏗️ Build project
    #   run: |
    #     npm install
    #     npm run build

    - name: 📂 Sync files to Hostinger
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 21

        # Adjust this if your build files are not in a 'build' folder
        local-dir: ./build/
        
        # --- THIS IS THE FIX ---
        # Use './' to upload to the directory the FTP user logs into (public_html).
        server-dir: ./
</file>

<file path="package.json">
{
  "name": "react-app-starter",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fortawesome/fontawesome-free": "^7.0.0",
    "@headlessui/react": "^2.1.2",
    "@heroicons/react": "^2.1.5",
    "@testing-library/jest-dom": "^6.4.8",
    "@testing-library/react": "^16.0.0",
    "@testing-library/user-event": "^14.5.2",
    "aos": "^2.3.4",
    "axios": "^1.7.7",
    "fs": "^0.0.1-security",
    "js-cookie": "^3.0.5",
    "lucide-react": "^0.542.0",
    "marked": "^15.0.4",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "^2.0.5",
    "react-icons": "^5.2.1",
    "react-multi-carousel": "^2.8.5",
    "react-redux": "^9.1.2",
    "react-router-dom": "^6.25.1",
    "react-scripts": "5.0.1",
    "react-scroll": "^1.9.0",
    "react-share": "^5.1.0",
    "redux": "^5.0.1",
    "swiper": "^11.1.14",
    "web-vitals": "^4.2.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "generate-sitemap": "node sitemap-generator.js",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/parser": "^7.26.3",
    "@babel/traverse": "^7.26.4",
    "@tailwindcss/typography": "^0.5.15"
  },
  "description": "This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).",
  "main": "tailwind.config.js",
  "author": "",
  "license": "ISC"
}
</file>

<file path="public/index.html">
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="ZEMAYDAR"
      content="Recent project.."
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>ZEMAYDAR</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>
</file>

<file path="src/App.js">
import "./index.css";
import React, { useEffect } from "react";
import { Routes, Route } from "react-router-dom";
import Navbar from "./Components/Navbar/Navbar";
import Footer from "./Components/Footer/Footer";
import Home from "./Pages/Home/Home";
import AOS from "aos";
import "aos/dist/aos.css";
import About from "./Pages/About/About";
import Contact from "./Pages/Contact/Contact";

function App() {
  useEffect(() => {
    AOS.init({ duration: 1000 });
  }, []);

  return (
    <>
      <Navbar />
      <main>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/about" element={<About />} />
          <Route path="/contact" element={<Contact />} />
        </Routes>
      </main>
      {/* <Footer /> */}
    </>
  );
}

export default App;
</file>

<file path="src/Data/Navbar.js">
const Navbar = {
    links: [
        {
            name: "Home",
            path: "/"
        },
      
        {
            name: "Services",
            path: "/"
        },
        {
            name: "About",
            path: "/"
        },
    
        {
            name: "Contact",
            path: "/"
        },        
    ]
};

export default Navbar;
</file>

<file path="src/Pages/Home/Home.jsx">
import React from 'react';
import Hero from './Hero';
import Issues from './Issues';
import Benefits from './Benefits';
import Risks from './Risks';
import Methods from './Methods';
import ExitStrategy from './ExitStrategy';

const Home = () => {
  return (
    <>
      <Hero />
      <Issues />
       <Benefits /> 
       {/* <Methods />
      <Risks />
      <ExitStrategy />  */}
    </>
  );
}

export default Home;
</file>

<file path="src/Components/Navbar/Desktop.jsx">
import "./Navbar.css";
import logo from '../../Assets/golden-logo.png'
import React, { useState, useEffect } from "react"; // Import useState and useEffect
import { NavLink } from "react-router-dom";
import Navbar from "../../Data/Navbar";
import { FaFacebookF, FaInstagram, FaLinkedin, FaTiktok } from "react-icons/fa";
import { FaPhone, FaMapMarkerAlt } from "react-icons/fa";
import { useNavigate } from "react-router-dom";

const Desktop = () => {
  const navigate = useNavigate();
  const [isScrolled, setIsScrolled] = useState(false);

  useEffect(() => {
    const handleScroll = () => {
      // Set isScrolled to true if user has scrolled more than 10px, otherwise false
      if (window.scrollY > 10) {
        setIsScrolled(true);
      } else {
        setIsScrolled(false);
      }
    };

    // Add event listener when the component mounts
    window.addEventListener("scroll", handleScroll);

    // Clean up the event listener when the component unmounts
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);


  const handleGetStartedClick = () => {
    window.scrollTo(0, 0);
    navigate("/contact");
  };

  const handleNavClick = () => {
    window.scrollTo(0, 0);
  };

  // const img1 = `${process.env.REACT_APP_DOMAIN}/Assets/logo02.webp`;


  return (
    <>
      {/*
        Dynamically change navbar style based on scroll position.
        - When at the top (isScrolled = false), background is transparent.
        - When scrolled down (isScrolled = true), background becomes white with a shadow.
      */}
      <div 
        className={`hidden lg:block fixed top-0 w-full z-50 transition-colors duration-300 ${
          isScrolled ? "bg-white shadow-md" : "bg-transparent"
        }`}
      >
        <div className={`flex items-center justify-between px-8 ${isScrolled ? "border-b" : "border-none"}`}>
          {/* Logo */}
          <div>
            <NavLink to="/" onClick={handleNavClick}>
              <img
                src={logo}
                alt="Company Logo..."
                className="h-10 my-4 w-auto"
                loading="lazy"
              />
            </NavLink>
          </div>
          <div className="flex items-center">
            <nav className="flex items-center capppitalize">
              {Navbar.links.map((link, index) =>
                !link.submenu ? (
                  <NavLink
                    key={index}
                    to={link.path}
                    onClick={handleNavClick}
                    className={({ isActive }) =>
                      // CHANGED: Removed the clamp function and changed text-base to text-lg
                      `px-4 py-2 rounded-md hover:bg-white/20 transition-colors text-lg
                      ${
                        isActive 
                        ? "font-bold text-[#BD872E]" 
                        : isScrolled ? "text-gray-600" : "text-white"
                      }`
                    }
                  >
                    {link.name}
                  </NavLink>
                ) : (
                  <div key={index} className="relative group">
                    <NavLink
                      to={link.path}
                      onClick={handleNavClick}
                      className={({ isActive }) =>
                        // CHANGED: Removed the clamp function and changed text-base to text-lg
                        `px-4 py-2 rounded-md hover:bg-white/20 transition-colors flex items-center text-lg
                        ${
                          isActive
                            ? "font-bold text-[#BD872E]"
                            : isScrolled ? "text-gray-600" : "text-white"
                        }`
                      }
                    >
                      {link.name}
                      <img
                        className="ml-1"
                        src={`${process.env.PUBLIC_URL}/Assets/icons/dropdown.svg`}
                        alt="dropdown"
                        loading="
                      lazy"
                      />
                    </NavLink>
                    <div className="absolute invisible group-hover:visible mt-0 w-64 bg-white shadow-lg rounded-md">
                      {link.submenu.map((sublink, subIndex) => (
                        <NavLink
                          key={subIndex}
                          to={sublink.path}
                          onClick={handleNavClick}
                          className={({ isActive }) =>
                            `block px-4 py-2 hover:bg-gray-100 capitalize transition-colors
                            ${
                              isActive
                                ? "font-bold text-[#BD872E]"
                                : "text-gray-600"
                            }`
                          }
                        >
                          {sublink.name}
                        </NavLink>
                      ))}
                    </div>
                  </div>
                )
              )}
            </nav>
            
          </div>
        </div>
      </div>
    </>
  );
};

export default Desktop;
</file>

<file path="src/Components/Navbar/Mobile.jsx">
import React, { useEffect, useState, useRef } from "react";
import { TfiClose } from "react-icons/tfi";
import { BsChevronDown } from "react-icons/bs";
import { FaBars } from "react-icons/fa";
import { NavLink } from "react-router-dom";
import NavbarData from "../../Data/Navbar";
import "./Navbar.css";
import logo from '../../Assets/golden-logo.png'

function Mobile() {
  const [nav, setNav] = useState(false);
  const [currentDropdown, setCurrentDropdown] = useState(null);
  const [isScrolled, setIsScrolled] = useState(false); // State to track scroll position

  // Effect to handle scroll detection
  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 10) {
        setIsScrolled(true);
      } else {
        setIsScrolled(false);
      }
    };
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  const handleNav = () => {
    setNav((prevNav) => !prevNav);
    if (!nav) {
        document.body.style.overflow = 'hidden'; // Prevent scrolling when menu is open
    } else {
        document.body.style.overflow = 'auto';
    }
  };

  const handleCrossNav = () => {
    setNav(false);
    document.body.style.overflow = 'auto';
  };

  const handleLinkClick = () => {
    window.scrollTo(0, 0);
    handleCrossNav(); // Close navbar on link click
  };

  const toggleDropdown = (menuName) => {
    setCurrentDropdown((prev) => (prev === menuName ? null : menuName));
  };

  const sidebarRef = useRef(null);
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {
        handleCrossNav();
      }
    };
    if (nav) {
      document.addEventListener("mousedown", handleClickOutside);
    }
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [nav]);

  return (
    <div
      className={`lg:hidden fixed top-0 flex items-center w-full z-[10000] transition-colors duration-300 ${
        isScrolled ? "bg-white shadow-md" : "bg-transparent"
      }`}
    >
      <div className="sectionlayout poppins text-black flex justify-between items-center w-full">
        <div className="flex items-center justify-center">
          <NavLink to="/" onClick={handleLinkClick}>
            <img
              src={logo}
              loading="lazy"
              className="h-10 my-4 w-auto" // Consistent sizing
              alt="Logo"
            />
          </NavLink>
        </div>
        <div className="flex items-center gap-0">
          <button
            className="inline-flex items-center rounded-md py-2 px-4 text-lg font-medium"
            onClick={handleNav}
          >
            {/* Hamburger icon color changes with scroll */}
            <FaBars size={20} className={isScrolled ? "text-[#BD872E]" : "text-white"} />
          </button>
        </div>
        
        {/* Sidebar Menu */}
        <div ref={sidebarRef} className={`navbar-menu ${nav ? "open" : ""}`}>
          <div className="sticky bg-white shadow-xl border-l border-white/70 overflow-y-auto">
            <ul className="pt-4 px-6 pb-3 overflow-y-auto h-[100vh]">
              <div className="flex justify-end pt-4">
                <TfiClose
                  onClick={handleCrossNav}
                  className="rounded p-1 font-bold hover:bg-black/5 text-[#BD872E]"
                  size={24}
                />
              </div>
              <div className="mt-6">
                {NavbarData.links.map((link, index) => (
                  <React.Fragment key={index}>
                    {link.submenu ? (
                      <>
                        <div
                          className="cursor-pointer capitalize px-1 flex items-center justify-between Georgian py-2 pl-3 font-medium hover:rounded hover:bg-black/5"
                          onClick={() => toggleDropdown(link.name)}
                        >
                          <NavLink
                            to={link.path}
                            onClick={handleLinkClick}
                            className={({ isActive }) =>
                              `hover:text-[#BD872E] ${
                                isActive ? "text-[#BD872E]" : "text-black"
                              }`
                            }
                          >
                            {link.name}
                          </NavLink>
                          <BsChevronDown
                            className={`${
                              currentDropdown === link.name ? "rotate-180" : ""
                            }`}
                          />
                        </div>
                        {currentDropdown === link.name && (
                          <div className="submenu capitalize open mt-2 ml-4 flex max-h-[30vh] overflow-y-auto flex-col my-3">
                            <ul className="relative flex flex-col">
                              {link.submenu.map((sublink, subIndex) => (
                                <NavLink
                                  to={sublink.path}
                                  key={subIndex}
                                  className={({ isActive }) =>
                                    `text-[#454545] text-md p-5 py-4 pl-3 hover:rounded hover:bg-black/5 hover:text-[#BD872E] ${
                                      isActive ? "text-[#BD872E]" : ""
                                    }`
                                  }
                                  onClick={handleLinkClick}
                                >
                                  {sublink.name}
                                </NavLink>
                              ))}
                            </ul>
                          </div>
                        )}
                      </>
                    ) : (
                      <NavLink
                        to={link.path}
                        className={({ isActive }) =>
                          `cursor-pointer px-1 flex items-center justify-between Georgian py-3 pl-3 font-medium hover:rounded hover:bg-black/5 hover:text-[#BD872E] ${
                            isActive ? "text-[#BD872E]" : "text-black"
                          }`
                        }
                        onClick={handleLinkClick}
                      >
                        {link.name}
                      </NavLink>
                    )}
                  </React.Fragment>
                ))}
              </div>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Mobile;
</file>

</files>
